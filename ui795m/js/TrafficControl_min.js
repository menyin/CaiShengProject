var BMapLib = window.BMapLib = BMapLib || {}; (function() { var c, b = c = b || { version: "1.3.9" }; b.guid = "$BAIDU$"; (function() { b.dom = b.dom || {}; b.event = b.event || {}; b.lang = b.lang || {}; b.browser = b.browser || {}; b.dom.addClass = function(o, p) { o = b.dom.g(o); var j = p.split(/\s+/), h = o.className, n = " " + h + " ", m = 0, k = j.length; for (; m < k; m++) { if (n.indexOf(" " + j[m] + " ") < 0) { h += (h ? " " : "") + j[m] } } o.className = h; return o }; b.addClass = b.dom.addClass; b.dom.removeClass = function(o, p) { o = b.dom.g(o); var m = o.className.split(/\s+/), q = p.split(/\s+/), k, h = q.length, l, n = 0; for (; n < h; ++n) { for (l = 0, k = m.length; l < k; ++l) { if (m[l] == q[n]) { m.splice(l, 1); break } } } o.className = m.join(" "); return o }; b.removeClass = b.dom.removeClass; b.dom.getComputedStyle = function(i, h) { i = b.dom._g(i); var k = b.dom.getDocument(i), j; if (k.defaultView && k.defaultView.getComputedStyle) { j = k.defaultView.getComputedStyle(i, null); if (j) { return j[h] || j.getPropertyValue(h) } } return "" }; b.dom.getStyle = function(i, h) { var k = b.dom; i = k.g(i); var j = i.style[h] || (i.currentStyle ? i.currentStyle[h] : "") || k.getComputedStyle(i, h); return j }; b.getStyle = b.dom.getStyle; b.dom.getDocument = function(h) { h = b.dom.g(h); return h.nodeType == 9 ? h : h.ownerDocument || h.document }; b.dom.g = function(h) { if ("string" == typeof h || h instanceof String) { return document.getElementById(h) } else { if (h && h.nodeName && (h.nodeType == 1 || h.nodeType == 9)) { return h } } return null }; b.g = b.G = b.dom.g; b.dom._g = function(h) { if (b.lang.isString(h)) { return document.getElementById(h) } return h }; b._g = b.dom._g; b.lang.isString = function(h) { return "[object String]" == Object.prototype.toString.call(h) }; b.isString = b.lang.isString; b.event._listeners = b.event._listeners || []; b.event.on = function(i, l, n) { l = l.replace(/^on/i, ""); i = b.dom._g(i); var m = function(p) { n.call(i, p) }, h = b.event._listeners, k = b.event._eventFilter, o, j = l; l = l.toLowerCase(); if (k && k[l]) { o = k[l](i, l, m); j = o.type; m = o.listener } if (i.addEventListener) { i.addEventListener(j, m, false) } else { if (i.attachEvent) { i.attachEvent("on" + j, m) } } h[h.length] = [i, l, n, m, j]; return i }; b.on = b.event.on; b.event.un = function(j, m, i) { j = b.dom._g(j); m = m.replace(/^on/i, "").toLowerCase(); var p = b.event._listeners, k = p.length, l = !i, o, n, h; while (k--) { o = p[k]; if (o[1] === m && o[0] === j && (l || o[2] === i)) { n = o[4]; h = o[3]; if (j.removeEventListener) { j.removeEventListener(n, h, false) } else { if (j.detachEvent) { j.detachEvent("on" + n, h) } } p.splice(k, 1) } } return j }; b.un = b.event.un; if (/msie (\d+\.\d)/i.test(navigator.userAgent)) { b.browser.ie = b.ie = document.documentMode || +RegExp["\x241"] } })(); var e = BMapLib.TrafficControl = function() { this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT; this.defaultOffset = new BMap.Size(10, 10) }; e.prototype = new BMap.Control(); e.prototype.initialize = function(j) { var h = d("div", { title: "\u663e\u793a\u4ea4\u901a\u6d41\u91cf", id: "tcBtn", "class": "maplibTcBtn maplibTcBtnOff" }); j.getContainer().appendChild(h); this._map = j; this._popUpDiv(this, h); var i = this; return h }; e.prototype._popUpDiv = function(D, t) { var u = ["\u67e5\u770b\u5b9e\u65f6\u8def\u51b5", "\u6d41\u91cf\u9884\u6d4b"]; var j = ["\u67e5\u770b\u6d41\u91cf\u9884\u6d4b", "\u5b9e\u65f6\u8def\u51b5"]; var x = true; var y = false; var B = this; B._bind = false; g(t, "afterEnd", r()); var z = b.g("tcViewPrediction"); var q = b.g("tcPredition"); var E = b.g("tcTitle"); var l = b.g("maplibTcDay"); var v = b.g("tcNow"); var n = b.g("tcWrap"); var s = b.g("tcTimeBox"); var w = b.g("tcUpdate"); var h = ["\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u65e5"]; var p = new C(D); this.show = function() { i(); y = true; b.dom.removeClass(t, "maplibTcBtnOff") }; this.hide = function() { y = false; b.dom.addClass(t, "maplibTcBtnOff"); b.dom.addClass("tcWrap", "maplibTcHide"); b.dom.addClass("tcPredition", "maplibTcHide"); D.hideTraffic() }; this.bShow = function() { return y }; this.setPopOffset = function(G) { var I = 24; var H = G.height + I + "px"; var F = G.width + "px"; switch (D.getAnchor()) { case BMAP_ANCHOR_TOP_LEFT: n.style.top = H; n.style.left = F; break; case BMAP_ANCHOR_TOP_RIGHT: n.style.top = H; n.style.right = F; break; case BMAP_ANCHOR_BOTTOM_RIGHT: n.style.bottom = H; n.style.right = F; break; case BMAP_ANCHOR_BOTTOM_LEFT: n.style.bottom = H; n.style.left = F; break } }; b.event.on(t, "onclick", function() { m() }); b.event.on("tcClose", "click", function(F) { m() }); function m() { if (!B.bShow()) { B.setPopOffset(D.getOffset()); B.show() } else { B.hide() } } function i() { l.innerHTML = "\u5f53\u524d\u65f6\u95f4"; E.innerHTML = j[1]; z.innerHTML = j[0]; b.dom.addClass(q, "maplibTcHide"); w.style.display = "block"; x = true; b.dom.removeClass("tcWrap", "maplibTcHide"); var G = new Date(); var F = G.getHours(); if (!B._bind) { A(D); k(D); B._bind = true } var H = (F < 10 ? ("0" + F) : F) + ":" + (G.getMinutes() < 10 ? ("0" + G.getMinutes()) : G.getMinutes()); v.innerHTML = H; D.hour = F; D.weekday = G.getDay(); D.time = H; p.setBarTime(F) } function r() { var F = ['<div class="maplibTc maplibTcHide" id="tcWrap">']; F.push('<div class="maplibTcColor" id="tcTitle">\u5b9e\u65f6\u8def\u51b5</div>'); F.push('<div id="tcRealTime">'); F.push('<div class="maplibTcTime"><span id="maplibTcDay" class="maplibTcCurTime">\u5f53\u524d\u65f6\u95f4</span><span><span class="maplibTcColon">\uff1a&nbsp;</span><span class="maplibTcCurTime" id="tcNow"></span><span title="\u66f4\u65b0" id="tcUpdate" class="maplibTcUpdate"></span> <a href="javascript:void(0)" class="maplibTcView" id="tcViewPrediction">\u67e5\u770b\u6d41\u91cf\u9884\u6d4b</a><a href="javascript:void(0)" class="maplibTcClose" id="tcClose"></a></div></div>'); F.push('<div id="tcPredition" class="maplibTcHide">'); F.push('<div class="maplibTcWeekDay"><span>\u661f\u671f</span><ul id="tcWeek"><li><a lang="1" href="javascript:void(0)">\u4e00</a></li><li><a lang="2" href="javascript:void(0)">\u4e8c</a></li><li><a lang="3" href="javascript:void(0)">\u4e09</a></li><li><a lang="4" href="javascript:void(0)">\u56db</a></li><li><a lang="5" href="javascript:void(0)">\u4e94</a></li><li><a lang="6" href="javascript:void(0)">\u516d</a></li><li><a lang="7" href="javascript:void(0)">\u65e5</a></li></ul></div>'); F.push('<div><div class="maplibTcRuleTxt">\u65f6\u95f4</div>'); F.push('<div class="maplibTcRule">'); F.push('<div><div class="maplibTcTimeBox" id="tcTimeBox">20:00</div></div>'); F.push('<div class="maplibTcTimeline" >'); F.push('<div class="maplibTcTimelinePrev" id="tcPrev"></div>'); F.push('<div class="maplibTcTimeMove" id="tcMove"></div>'); F.push('<div class="maplibTcTimelineNext" id="tcNext"></div>'); F.push("</div></div></div>"); F.push('<div class="maplibTcClear" style="text-align: center; color: #ccc;">\uff08\u57fa\u4e8e\u5386\u53f2\u6d41\u91cf\u7edf\u8ba1\u9884\u6d4b \u4ec5\u4f9b\u53c2\u8003\uff09</div>'); F.push("</div></div></div>"); return F.join("") } function A(G) { b.event.on("tcViewPrediction", "click", function() { if (x) { F() } else { i() } }); function F() { E.innerHTML = u[1]; z.innerHTML = u[0]; b.dom.removeClass(q, "maplibTcHide"); w.style.display = "none"; x = false; l.innerHTML = "\u661f\u671f" + h[G.weekday]; G.showTraffic() } b.event.on("tcUpdate", "click", function() { i() }) } function o() { l.innerHTML = "\u661f\u671f" + h[D.weekday]; v.innerHTML = D.time } function k(F) { b.event.on("tcWeek", "onclick", function(I) { var H = I.target || I.srcElement; if (H.tagName.toLowerCase() == "a") { var J = b.g("tcWeek").getElementsByTagName("a"); for (var G = 0; G < 7; G++) { J[G].className = "" } b.dom.addClass(H, "maplibTcOn"); F.weekday = (parseInt(a(H, "lang"), 10)) - 1; o(); F.showTraffic({ predictDate: { hour: F.hour, weekday: F.weekday + 1} }) } }) } function C(J) { var G; var L = b.g("tcMove"); function K(O) { b.on(document, "onmousemove", N); b.on(document, "onmouseup", F); if (O && O.preventDefault) { O.preventDefault() } else { window.event.returnValue = false } return false } function N(R) { var O = R.clientX || R.x; var Q = f(b.G("tcPrev")).left + 9; var P = O - Q - 4; if (P < 0) { P = 0 } if (P > 165) { P = 165 } if (b.browser.ie <= 6) { L.style.marginLeft = (P * 0.53) + "px" } else { L.style.marginLeft = P + "px" } s.style.marginLeft = (P) + "px"; I() } function F() { b.un(document, "onmousemove", N); b.un(document, "onmouseup", F); J.showTraffic({ predictDate: { hour: J.hour, weekday: J.weekday + 1} }) } b.on(L, "onmousedown", K); b.on("tcPrev", "click", function() { M("prev") }); b.on("tcNext", "click", function() { M("next") }); function M(O) { var P = s; var Q = parseInt(b.dom.getStyle("tcTimeBox", "marginLeft")); var R = Math.ceil((Q - 4) * 24 / 165); H(O == "next" ? (R + 1) : (R - 1)) } this.setBarTime = function(O) { H(O) }; function H(Q) { if (Q < 0) { Q = 0 } if (Q > 24) { Q = 24 } G = Q; var P = Q * (165 / 24); s.style.marginLeft = P + "px"; var O = b.g("tcMove"); if (b.browser.ie <= 6 && b.browser.ie > 0) { O.style.marginLeft = (P * 0.53) + "px" } else { O.style.marginLeft = P + "px" } J.hour = G; J.showTraffic({ predictDate: { hour: J.hour, weekday: J.weekday + 1} }); I() } function I() { var O = parseInt(s.style.marginLeft); var P = Math.ceil((O - 4) * 24 / 165); G = P; J.hour = P; if (P < 10) { P = "0" + P } s.innerHTML = v.innerHTML = J.time = P + ":00" } } }; e.prototype.showTraffic = function(h) { var i; if (this._trafficLayer) { this._map.removeTileLayer(this._trafficLayer) } if (h) { if (h.predictDate.weekday > 7 || h.predictDate.weekday < 1) { return } i = new BMap.TrafficLayer(h) } else { i = new BMap.TrafficLayer() } this._map.addTileLayer(i); this._trafficLayer = i }; e.prototype.hideTraffic = function() { if (this._trafficLayer) { this._map.removeTileLayer(this._trafficLayer); this._trafficLayer = null } }; e.prototype.remove = function() { this.hideTraffic(); var h = b.g("tcWrap"); h.parentNode.removeChild(h); BMap.Control.prototype.remove.call(this) }; function a(i, h, j) { if (!h || h.constructor != String) { return "" } h = { "for": "htmlFor", "class": "className"}[h] || h; if (typeof j != "undefined") { i[h] = j; if (i.setAttribute) { i.setAttribute(h, j) } } return i[h] || i.getAttribute(h) || "" } function d(j, i) { var l = document.createElement(j); i = i || {}; for (var k in i) { value = i[k]; k = h()[k] || k; if (k == "style") { l.style.cssText = value; continue } if (l.setAttribute) { l.setAttribute(k, value) } else { try { l[k] = value } catch (l) { } } } return l; function h() { var m = { cellpadding: "cellPadding", cellspacing: "cellSpacing", colspan: "colSpan", rowspan: "rowSpan", valign: "vAlign" }; if (b.browser.ie < 8) { m["for"] = "htmlFor"; m["class"] = "className" } else { m.htmlFor = "for"; m.className = "class" } return m } } function f(h) { var i = { left: 0, top: 0 }; while (h && h.offsetParent) { i.left += h.offsetLeft; i.top += h.offsetTop; h = h.offsetParent } return i } function g(k, h, j) { var i, l; if (k.insertAdjacentHTML) { k.insertAdjacentHTML(h, j) } else { i = k.ownerDocument.createRange(); h = h.toUpperCase(); if (h == "AFTERBEGIN" || h == "BEFOREEND") { i.selectNodeContents(k); i.collapse(h == "AFTERBEGIN") } else { l = h == "BEFOREBEGIN"; i[l ? "setStartBefore" : "setEndAfter"](k); i.collapse(l) } i.insertNode(i.createContextualFragment(j)) } return k } })();